// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231217161824_CreateInitDb4")]
    partial class CreateInitDb4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("api.Models.Person.GeneralPosition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("GeneralPositionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GeneralPositions");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            GeneralPositionName = "บริหารงานทั่วไป"
                        },
                        new
                        {
                            ID = 2,
                            GeneralPositionName = "อาจารย์"
                        });
                });

            modelBuilder.Entity("api.Models.Person.Personnel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Expert")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GeneralPositionID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LvEdu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrefixID")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GeneralPositionID");

                    b.HasIndex("PrefixID");

                    b.HasIndex("RoleID");

                    b.ToTable("Personnels");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Expert = "Software Development",
                            FullName = "Hikigaya Hachiman",
                            GeneralPositionID = 1,
                            Image = "Hachi@gmail.com",
                            LvEdu = "ป.ตรี",
                            PasswordHash = "$2a$11$0XCo6T1AAmg7iwfYUKT/tuLaX5CCe7Eka7MOdnnebFYss0cqPYpOy",
                            PrefixID = 1,
                            RoleID = 1,
                            UserName = "Hachi"
                        });
                });

            modelBuilder.Entity("api.Models.Person.Prefix", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("PrefixName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Prefixes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PrefixName = "นาย"
                        },
                        new
                        {
                            ID = 2,
                            PrefixName = "นาง"
                        },
                        new
                        {
                            ID = 3,
                            PrefixName = "นางนางสาว"
                        },
                        new
                        {
                            ID = 4,
                            PrefixName = "ผศ."
                        },
                        new
                        {
                            ID = 5,
                            PrefixName = "รศ."
                        });
                });

            modelBuilder.Entity("api.Models.Person.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            ID = 2,
                            RoleName = "Lecturer"
                        },
                        new
                        {
                            ID = 3,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("api.Models.Supplies.Budget", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BudgetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Budgets");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BudgetName = "งปม."
                        },
                        new
                        {
                            ID = 2,
                            BudgetName = "บกศ."
                        });
                });

            modelBuilder.Entity("api.Models.Supplies.OrderSlip", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BudgetsID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderSlipImportantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderSlipNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderSlipStatus")
                        .HasColumnType("int");

                    b.Property<int>("PersonnelsID")
                        .HasColumnType("int");

                    b.Property<string>("PetitionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BudgetsID");

                    b.HasIndex("PersonnelsID");

                    b.ToTable("OrderSlips");
                });

            modelBuilder.Entity("api.Models.Supplies.OrderSlipItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("OrderSlipId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SuppliesId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderSlipId");

                    b.HasIndex("SuppliesId");

                    b.ToTable("OrderSlipItems");
                });

            modelBuilder.Entity("api.Models.Supplies.PaymentVoucher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentVoucherImportantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentVoucherStatus")
                        .HasColumnType("int");

                    b.Property<string>("PersonApproving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonnelsID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PersonnelsID");

                    b.ToTable("PaymentVouchers");
                });

            modelBuilder.Entity("api.Models.Supplies.PaymentVoucherItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentVoucherId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SuppliesId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PaymentVoucherId");

                    b.HasIndex("SuppliesId");

                    b.ToTable("PaymentVoucherItems");
                });

            modelBuilder.Entity("api.Models.Supplies.Supplies", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Classifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SuppliesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Year")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Supplies");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Classifier = "กล่อง",
                            Price = 2990.0,
                            Quantity = 0,
                            SuppliesName = "หมึกพิมพ์ Laser jet HP 85A",
                            Year = new DateTime(2023, 12, 17, 23, 18, 24, 454, DateTimeKind.Local).AddTicks(1950)
                        },
                        new
                        {
                            ID = 2,
                            Classifier = "ด้าม",
                            Price = 25.0,
                            Quantity = 0,
                            SuppliesName = "ปากกาเจลสีน้ำเงิน",
                            Year = new DateTime(2023, 12, 17, 23, 18, 24, 454, DateTimeKind.Local).AddTicks(1962)
                        });
                });

            modelBuilder.Entity("api.Models.Person.Personnel", b =>
                {
                    b.HasOne("api.Models.Person.GeneralPosition", "GeneralPositions")
                        .WithMany()
                        .HasForeignKey("GeneralPositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Person.Prefix", "Prefixes")
                        .WithMany()
                        .HasForeignKey("PrefixID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Person.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralPositions");

                    b.Navigation("Prefixes");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("api.Models.Supplies.OrderSlip", b =>
                {
                    b.HasOne("api.Models.Supplies.Budget", "Budgets")
                        .WithMany("OrderSlips")
                        .HasForeignKey("BudgetsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Person.Personnel", "Personnels")
                        .WithMany("OrderSlips")
                        .HasForeignKey("PersonnelsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budgets");

                    b.Navigation("Personnels");
                });

            modelBuilder.Entity("api.Models.Supplies.OrderSlipItem", b =>
                {
                    b.HasOne("api.Models.Supplies.OrderSlip", "OrderSlips")
                        .WithMany("OrderSlipItems")
                        .HasForeignKey("OrderSlipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("api.Models.Supplies.Supplies", "Supplies")
                        .WithMany("OrderSlipItems")
                        .HasForeignKey("SuppliesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderSlips");

                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("api.Models.Supplies.PaymentVoucher", b =>
                {
                    b.HasOne("api.Models.Person.Personnel", "Personnels")
                        .WithMany("PaymentVouchers")
                        .HasForeignKey("PersonnelsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personnels");
                });

            modelBuilder.Entity("api.Models.Supplies.PaymentVoucherItem", b =>
                {
                    b.HasOne("api.Models.Supplies.PaymentVoucher", "PaymentVouchers")
                        .WithMany("PaymentVoucherItems")
                        .HasForeignKey("PaymentVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Supplies.Supplies", "Supplies")
                        .WithMany("PaymentVoucherItems")
                        .HasForeignKey("SuppliesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentVouchers");

                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("api.Models.Person.Personnel", b =>
                {
                    b.Navigation("OrderSlips");

                    b.Navigation("PaymentVouchers");
                });

            modelBuilder.Entity("api.Models.Supplies.Budget", b =>
                {
                    b.Navigation("OrderSlips");
                });

            modelBuilder.Entity("api.Models.Supplies.OrderSlip", b =>
                {
                    b.Navigation("OrderSlipItems");
                });

            modelBuilder.Entity("api.Models.Supplies.PaymentVoucher", b =>
                {
                    b.Navigation("PaymentVoucherItems");
                });

            modelBuilder.Entity("api.Models.Supplies.Supplies", b =>
                {
                    b.Navigation("OrderSlipItems");

                    b.Navigation("PaymentVoucherItems");
                });
#pragma warning restore 612, 618
        }
    }
}
